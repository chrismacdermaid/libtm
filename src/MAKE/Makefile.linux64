# linux64  = Optimized compiler options, g++, 64bit

SHELL = /bin/sh
ROOT = ccb
VERSION = 1.0

# ---------------------------------------------------------------------
# compiler/linker settings
# specify flags and libraries needed for your compiler

CC =		g++
CCFLAGS =	-O2 -fomit-frame-pointer -fno-rtti -fno-exceptions \
			-march=core2 -msse3 -ffast-math -mpc64 -finline-functions \
			-funroll-loops -fstrict-aliasing -Wall -W -Wno-uninitialized
SHFLAGS =       -fPIC
DEPFLAGS =      -M

LINK =		g++
LINKFLAGS =	-O -fomit-frame-pointer -march=core2 -msse3 -fno-rtti -fno-exceptions -mpc64
LIB =           -lstdc++ -lm
SIZE =		size

ARCHIVE =       ar
ARFLAGS =       -rc
SHLIBFLAGS =    -shared -m64

# ---------------------------------------------------------------------
# TM-specific settings
# specify settings for TM features you will use
# if you change any -D setting, do full re-compile after "make clean"

# TM ifdef settings, OPTIONAL, include -D

TM_INC = -DPACKAGE_NAME=\"$(ROOT)\" -DPACKAGE_VERSION=\"$(VERSION)\"\
	  -DUSE_TCL_STUBS

# TCL library, required
# INC = 
# PATH = 
# LIB = 

TCL_INC =  -I/usr/include/tcl8.5
TCL_PATH = -L/usr/lib64
TCL_LIB =  -ltcl8.5
TCL_STUB_LIB = -ltclstub8.5

# ---------------------------------------------------------------------
# build rules and dependencies
# no need to edit this section

EXTRA_INC = $(TM_INC) $(PKG_INC) $(TCL_INC)
EXTRA_PATH = $(TCL_PATH)
EXTRA_LIB =  $(TCL_LIB) $(TCL_STUB_LIB)

# Link target

$(EXE):	$(OBJ)
	$(LINK) $(LINKFLAGS) $(EXTRA_PATH) $(OBJ) $(EXTRA_LIB) $(LIB) -o $(EXE)
	$(SIZE) $(EXE)

# Library targets

lib:    $(OBJ)
	$(ARCHIVE) $(ARFLAGS) $(EXE) $(OBJ)

shlib:  $(OBJ)
	$(CC) $(CCFLAGS) $(SHFLAGS) $(SHLIBFLAGS) $(EXTRA_PATH) -o $(EXE) \
	$(OBJ) $(EXTRA_LIB) $(LIB)

# Compilation rules

%.o:%.cpp
	$(CC) $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $<

%.d:%.cpp
	$(CC) $(CCFLAGS) $(EXTRA_INC) $(DEPFLAGS) $< > $@

# Individual dependencies

DEPENDS = $(OBJ:.o=.d)
sinclude $(DEPENDS)
